+++ linux-5.19.9/arch/x86/entry/syscalls/syscall_64.tbl 2022-09-15 14:17:20.0000000000 +0530
@@ -372,7 +372,7 @@
 448	common	process_mrelease	    sys_process_mrelease
 449	common	futex_waitv 		    sys_futex_waitv
 450	common	set_mempolicy_home_node	sys_set_mempolicy_home_node
-451	common	kernel_2d_memcpy		sys_kernel_2d_memcpy
+
 #
 # Due to a historical design error, certain syscalls are numbered differently
 # in x32 as compared to native x86_64.  These syscalls have numbers 512-547.
--- linux-LRKB/kernel/sys.c     2022-11-24 00:08:08.640016308 +0530
+++ linux-5.19.9/kernel/sys.c   2022-11-24 14:17:20.000000000 +0530
@@ -206,14 +206,7 @@ 
 out:
 	    return error;
 }
 
-SYSCALL_DEFINE4(kernel_2d_memcpy, float *, Qwe1,float *,abc2,int,Ro,int,Column){
-	float Matrix[Ro][Column];
-	if(copy_from_user(&Matrix,abc2,sizeof(Matrix))!=0){
-		return -EFAULT;}
-	if(copy_to_user(Qwe1,&Matrix,sizeof(Matrix))!=0){
-		return -EFAULT;}	
-      return 0;
-}
+
 SYSCALL_DEFINE3(setpriority, int, which, int, who, int, niceval)
 {
        struct task_struct *g, *p;